#!/usr/bin/env node

'use strict';

const compiler = require('./index.js');
const argv = require('yargs')
  .option('o', {alias: 'output', describe: 'output path', type: 'string'})
  .usage('$0 <input>', 'transform a fireplan rules file into a JSON rules file', yargs => {
    yargs.positional('input', {
      describe: 'the fireplan rules input file',
      type: 'string'
    });
  })
  .strict()
  .argv;
const fs = require('fs');
const path = require('path');
const yaml = require('js-yaml');

const output = argv.output || argv.input.replace(/\.ya?ml$/, '') + '.json';
const rawSource = fs.readFileSync(argv.input, 'utf8');
const source = yaml.load(rawSource, {filename: argv.input, schema: yaml.DEFAULT_SAFE_SCHEMA});
const rules = compiler.transform(source);
// console.log(JSON.stringify(rules, null, 2));
fs.mkdirSync(path.dirname(output), {recursive: true});
fs.writeFileSync(output, JSON.stringify({rules: rules.rules}, null, 2));
if (rules.firecrypt) {
  const cryptOutput = output.replace(/\.json$/, '_firecrypt.json');
  fs.writeFileSync(cryptOutput, JSON.stringify({rules: rules.firecrypt}, null, 2));
}
